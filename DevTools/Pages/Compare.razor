@page "/compare"
@using BlazorMonaco;
@using BlazorMonaco.Editor;

<div class="max-w-screen-xl mx-auto">
    <h1 class="text-2xl font-bold text-gray-800 mb-6">Compare</h1>

    <div class="bg-white rounded-lg shadow-md overflow-hidden">
        <div class="p-4">
            <p class="text-gray-600 mb-4">Use this tool to compare two pieces of text or code side by side. The left editor is editable.</p>
            
            <div class="monaco-editor-container border border-gray-300 rounded-lg overflow-hidden" style="height: 70vh;">
                <StandaloneDiffEditor @ref="_diffEditor" Id="diff-editor" ConstructionOptions="DiffEditorConstructionOptions" OnDidInit="EditorOnDidInit" />
            </div>
        </div>
    </div>
</div>

@code {
    private StandaloneDiffEditor? _diffEditor { get; set; }

    private StandaloneDiffEditorConstructionOptions DiffEditorConstructionOptions(StandaloneDiffEditor editor)
    {
        return new StandaloneDiffEditorConstructionOptions
            {
                OriginalEditable = true,
                EnableSplitViewResizing = true,
                Theme = "vs",
                AutomaticLayout = true,
                ScrollBeyondLastLine = false
            };
    }

    private async Task EditorOnDidInit()
    {
        if(_diffEditor == null)
        {
            return;
        }
        
        // Get or create the original model
        TextModel original_model = await Global.GetModel("editor-originalModel");
        if (original_model == null)
        {
            original_model = await Global.CreateModel("", "json", "editor-originalModel");
        }

        // Get or create the modified model
        TextModel modified_model = await Global.GetModel("editor-modifiedModel");
        if (modified_model == null)
        {
            modified_model = await Global.CreateModel("", "json", "editor-modifiedModel");
        }

        // Set the editor model
        await _diffEditor.SetModel(new DiffEditorModel
            {
                Original = original_model,
                Modified = modified_model
            });
    }
}
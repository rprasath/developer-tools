@page "/guidhelpers"
@inject IJSRuntime JSRuntime

<div class="max-w-screen-xl mx-auto">
    <h1 class="text-2xl font-bold text-gray-800 mb-6">GUID Generator</h1>

    <!-- Generate GUID Card -->
    <div class="bg-white rounded-lg shadow-md mb-8">
        <div class="border-b border-gray-200 px-6 py-4">
            <h2 class="text-lg font-semibold text-gray-800">Generate GUID</h2>
        </div>
        <div class="p-6">
            <div class="flex flex-col md:flex-row gap-4">
                <div class="flex-grow relative">
                    <textarea @bind="NewGuid" class="w-full p-2 border border-gray-300 rounded-md bg-gray-50" disabled rows="1"></textarea>
                    <button @onclick="CopyNewGuid" 
                            id="copy-guid-btn" 
                            class="absolute right-2 top-2 text-gray-500 hover:text-gray-700 focus:outline-none"
                            title="Copy to clipboard">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
                        </svg>
                    </button>
                </div>
                <div>
                    <button @onclick="GenerateGuid" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
                        Generate
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- GUID from long and int Card -->
    <div class="bg-white rounded-lg shadow-md mb-8">
        <div class="border-b border-gray-200 px-6 py-4">
            <h2 class="text-lg font-semibold text-gray-800">GUID from long and int</h2>
        </div>
        <div class="p-6">
            <div class="flex flex-col md:flex-row gap-6 mb-4">
                <div class="flex-1">
                    <label for="longInput" class="block text-sm font-medium text-gray-700 mb-1">Long Input</label>
                    <input type="text" @bind="LongInput" class="w-full p-2 border border-gray-300 rounded-md" name="longInput" id="longInput" />
                </div>
                <div class="flex-1">
                    <label for="intInput" class="block text-sm font-medium text-gray-700 mb-1">Int Input</label>
                    <input type="text" @bind="IntInput" class="w-full p-2 border border-gray-300 rounded-md" name="intInput" id="intInput" />
                </div>
                <div class="flex items-end">
                    <button @onclick="GuidFromLongAndInt" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
                        Generate
                    </button>
                </div>
            </div>
            <div class="mt-4 relative">
                <label class="block text-sm font-medium text-gray-700 mb-1">Result:</label>
                <textarea @bind="LongIntToGuidResult" disabled class="w-full p-2 border border-gray-300 rounded-md bg-gray-50" rows="1"></textarea>
                <button @onclick="CopyLongIntResult" 
                        id="copy-longint-result-btn" 
                        class="absolute right-2 top-8 text-gray-500 hover:text-gray-700 focus:outline-none"
                        title="Copy to clipboard">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
                    </svg>
                </button>
            </div>
        </div>
    </div>

    <!-- Split GUID to long and int Card -->
    <div class="bg-white rounded-lg shadow-md">
        <div class="border-b border-gray-200 px-6 py-4">
            <h2 class="text-lg font-semibold text-gray-800">Split GUID to long and int</h2>
        </div>
        <div class="p-6">
            <div class="flex flex-col md:flex-row gap-4 mb-6">
                <div class="flex-grow">
                    <input type="text" @bind="Section3GuidInput" class="w-full p-2 border border-gray-300 rounded-md" name="sec3LongInput" id="sec3LongInput" placeholder="Enter GUID" />
                </div>
                <div>
                    <button @onclick="SplitGuidToLongAndInt" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
                        Generate
                    </button>
                </div>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div class="relative">
                    <label class="block text-sm font-medium text-gray-700 mb-1">Long Result:</label>
                    <textarea @bind="Section3LongResult" disabled class="w-full p-2 border border-gray-300 rounded-md bg-gray-50" rows="1"></textarea>
                    <button @onclick="CopyLongResult" 
                            id="copy-long-result-btn" 
                            class="absolute right-2 top-8 text-gray-500 hover:text-gray-700 focus:outline-none"
                            title="Copy to clipboard">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3" />
                        </svg>
                    </button>
                </div>
                <div class="relative">
                    <label class="block text-sm font-medium text-gray-700 mb-1">Int Result:</label>
                    <textarea @bind="Section3IntResult" disabled class="w-full p-2 border border-gray-300 rounded-md bg-gray-50" rows="1"></textarea>
                    <button @onclick="CopyIntResult" 
                            id="copy-int-result-btn" 
                            class="absolute right-2 top-8 text-gray-500 hover:text-gray-700 focus:outline-none"
                            title="Copy to clipboard">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3" />
                        </svg>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public string NewGuid { get; set; } = Guid.NewGuid().ToString();

    public string? LongInput { get; set; }
    public string? IntInput { get; set; }
    public string? LongIntToGuidResult { get; set; }

    public string? Section3GuidInput { get; set; }
    public string? Section3LongResult { get; set; }
    public string? Section3IntResult { get; set; }

    private void GenerateGuid()
    {
        NewGuid = Guid.NewGuid().ToString();
    }

    private void GuidFromLongAndInt()
    {
        long.TryParse(LongInput, out long parsedLong);
        int.TryParse(IntInput, out int parsedInt);

        if (parsedInt > 0 && parsedLong > 0)
        {
            var bytes = new byte[16];
            BitConverter.GetBytes(parsedLong).CopyTo(bytes, 0);
            BitConverter.GetBytes(parsedInt).CopyTo(bytes, 12);

            LongIntToGuidResult = new Guid(bytes).ToString();
        }
    }

    private void SplitGuidToLongAndInt()
    {
        var isParseSuccess = Guid.TryParse(Section3GuidInput, out Guid parsedGuid);

        if (isParseSuccess)
        {
            var gb = parsedGuid.ToByteArray();

            Section3LongResult = BitConverter.ToInt64(gb, 0).ToString();
            Section3IntResult = BitConverter.ToInt32(gb, 12).ToString();
        }
    }
    
    private async Task CopyNewGuid()
    {
        if (!string.IsNullOrEmpty(NewGuid))
        {
            await JSRuntime.InvokeVoidAsync("copyToClipboard", NewGuid, "copy-guid-btn");
        }
    }
    
    private async Task CopyLongIntResult()
    {
        if (!string.IsNullOrEmpty(LongIntToGuidResult))
        {
            await JSRuntime.InvokeVoidAsync("copyToClipboard", LongIntToGuidResult, "copy-longint-result-btn");
        }
    }
    
    private async Task CopyLongResult()
    {
        if (!string.IsNullOrEmpty(Section3LongResult))
        {
            await JSRuntime.InvokeVoidAsync("copyToClipboard", Section3LongResult, "copy-long-result-btn");
        }
    }
    
    private async Task CopyIntResult()
    {
        if (!string.IsNullOrEmpty(Section3IntResult))
        {
            await JSRuntime.InvokeVoidAsync("copyToClipboard", Section3IntResult, "copy-int-result-btn");
        }
    }
}